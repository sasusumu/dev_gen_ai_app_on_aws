AWSTemplateFormatVersion: 2010-09-09
Description: Bedrock ResponseStream API POC

Resources:
  HandlerDefaultRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
 
  SendTextHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns: 
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      
  BedrockServiceRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'bedrock:InvokeModel'
              - 'bedrock:InvokeModelWithResponseStream'
            Effect: Allow
            Resource: 
              - '*'
        Version:  "2012-10-17"
      PolicyName: HandlerServiceRolePolicyBedrock
      Roles:
        - Ref: SendTextHandlerRole

  ExecuteApiServiceRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - 'execute-api:*'
            Effect: Allow
            Resource:
              - !Sub arn:aws:execute-api:*:${AWS::AccountId}:*/*/*/*
        Version:  "2012-10-17"
      PolicyName: HandlerServiceRolePolicyExecuteApi
      Roles:
        - Ref: SendTextHandlerRole
        - Ref: HandlerDefaultRole

Outputs:
  HandlerDefaultRole:
    Value: !GetAtt HandlerDefaultRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-HandlerDefaultRole
  SendTextHandlerRole:
    Value: !GetAtt SendTextHandlerRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-SendTextHandlerRole